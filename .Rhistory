tcltk::tk_choose.dir()
library(remoterUtils)
library(remoterUtils)
#
# connect_remote() ----
remoterUtils::connect_remote(credentials = 'ENV', prompt = "IMPERIAL::", session = "imperialtower")
#
# connect_remote() ----
remoterUtils::connect_remote(credentials = 'ENV', prompt = "IMPERIAL::", session = "imperialtower")
#
# connect_remote() ----
remoterUtils::connect_remote(credentials = 'ENV', prompt = "IMPERIAL::", session = "imperialtower")
library(remoterUtils)
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
DESC <- desc::desc()
DESC <- desc::desc(file = "pkg/DESCRIPTION")
DESC$get_maintainer()
DESC$get_list()
DESC$get_list(key = "title")
DESC$get_field("Title")
DESC$get_field("Description")
DESC$set(Description = "\code{remoterUtils} provides utility functions facilitating management of \code{remoter} sessions as well as authentication objects (see \code{\link[remoter]{remoter-package}} for \code{remoter} documentation).  Code is designed for use in a Windows environment.")
DESC$set(Description = "\\code{remoterUtils} provides utility functions facilitating management of \\code{remoter} sessions as well as authentication objects (see \\code{\\link[remoter]{remoter-package}} for \\code{remoter} documentation).  Code is designed for use in a Windows environment.")
DESC$set(Description = "Package \\code{remoterUtils} provides utility functions facilitating management of \\code{remoter} sessions as well as authentication objects (see \\code{\\link[remoter]{remoter-package}} for \\code{remoter} documentation).  Code is designed for use in a Windows environment.")
DESC
DESC$write()
DESC$normalize()$write()
DESC <- desc::desc(file = "pkg/DESCRIPTION")
?attach
source("D:/Imperial Git Repos/remoterUtils/pkg/R/make_cipher.R")
library(remoterUtils)
library(remoterUtils)
Sys.getenv(remoter_GW2)
Sys.getenv("remoter_GW2")
#
# connect_remote() ----
remoterUtils::connect_remote(credentials = TRUE, prompt = "IMPERIAL::", session = "imperialtower")
#
# connect_remote() ----
remoterUtils::connect_remote(credentials = TRUE, prompt = "IMPERIAL::", session = "imperialtower")
Sys.getenv("remoter_imperialtower")
Sys.getenv("remoter_GW2")
library(remoterUtils)
library(remoterUtils)
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
install.packages("sodium")
remotes::install_github("RBigData/remoter")
remotes::install_github("wrathematics/argon2")
remotes::install_github("RBigData/remoter")
remotes::install_github("delriaan/remoterUtils", subdir="pkg")
library(remoterUtils)
detach("package:remoterUtils", unload = TRUE)
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
pkgdown::build_site(pkg = "pkg", lazy = TRUE, override = list(destination = "../docs"))
getwd()
library(remoterUtils)
View(server_fun)
x <- list(a = 1, b = 4)
ls(x)
mget("c", envir = x)
mget("c", envir = as.environment(x))
ls(x, pattern = "c")
ls(x, pattern = "a|c")
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
imperialtower$result
imperialtower
imperialtower$addr
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
imperialtower$result
imperialtower$addr
imperialtower$password
imperialtower$password |> str()
imperialtower$password |> deparse()
View(imperialtower)
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
imperialtower$result
imperialtower$addr
imperialtower$password
imperialtower$connect
imperialtower$connect()
imperialtower$history
imperialtower$history$hist_2023.12.21.111012_batch
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
imperialtower$result
imperialtower$addr
imperialtower$password
imperialtower$connect()
dir("~")
imperialtower$connect()
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
# imperialtower$addr <- "192.168.1.147"
imperialtower$connect(action = "batch", capture = TRUE, script = "cat(Sys.getpid())")
imperialtower$connect(action = "batch", capture = FALSE, script = "cat(Sys.getpid())")
imperialtower$result
imperialtower$addr
imperialtower$password
imperialtower$connect()
getwd()
imperialtower$connect()
?search
searchpaths()
dir("C:\temp")
dir("C:")
tempdir()
imperialtower$connect()
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
library(remoterUtils)
search()
library(remoterUtils)
search()
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
imperialtower$connect()
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
library(remoterUtils)
detach("package:remoterUtils", unload = TRUE)
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
?ls
imperialtower$connect()
library(remoterUtils)
# D:\remoter_imperialtower\start.bat action=start session=imperialtower
imperialtower <- remoterUtils::connect_remote$new(prompt = "IMPERIALTOWER", credentials = TRUE);
imperialtower$connect()
